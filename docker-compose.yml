services:
  gateway:
    build:
      context: ./apis/gateway
    env_file: .env
    volumes:
      - ./apis:/api
    ports:
      - "5001:8080"
    depends_on:
      - authcommand

  authcommand:
    container_name: authcommand
    build:
      context: ./apis/authCommand
    env_file: .env
    depends_on:
      - "mongodb"
    environment:
      - NODE_ENV=production

  # authquery:
    # container_name: authQuery
    # build:
    #   context: ./apis/authQuery
    # env_file: .env
    # volumes:
    #   - ./apis:/api
    # ports:
    #   - 8082:3000
    # depends_on:
    #   - mongodb

  # MaintenanceCommand:
    # container_name: MaintenanceCommand
    # build:
    #   context: ./apis/MaintenanceCommand
    #   target: development
    # env_file: .env
    # volumes:
    #   - ./api:/api
    # ports:
    #   - 8084:80
    # depends_on:
    #   - mongodb
    # networks:
    #   - voltride
  
  # MaintenanceQuery:
    # container_name: MaintenanceQuery
    # build:
    #   context: ./apis/MaintenanceQuery
    #   target: development
    # env_file: .env
    # volumes:
    #   - ./api:/api
    # ports:
    #   - 8085:80
    # depends_on:
    #   - mongodb
    # networks:
    #   - voltride

  # ReservationCommand:
    # container_name: ReservationCommand
    # build:
    #   context: ./apis/ReservationCommand
    #   target: development
    # env_file: .env
    # volumes:
    #   - ./api:/api
    # ports:
    #   - 8086:80
    # depends_on:
    #   - mongodb
    # networks:
    #   - voltride

  # ReservationQuery:
    # container_name: ReservationQuery
    # build:
    #   context: ./apis/ReservationQuery
    #   target: development
    # env_file: .env
    # volumes:
    #   - ./api:/api
    # ports:
    #   - 8087:80
    # depends_on:
    #   - mongodb
    # networks:
    #   - voltride

  # stockCommand:
    # container_name: stockCommand
    # build:
    #   context: ./apis/stockCommand
    #   target: development
    # env_file: .env
    # volumes:
    #   - ./api:/api
    # ports:
    #   - 8088:80
    # depends_on:
    #   - mongodb
    # networks:
    #   - voltride

  # stockQuery:
    # container_name: stockQuery
    # build:
    #   context: ./apis/stockQuery
    #   target: development
    # env_file: .env
    # volumes:
    #   - ./api:/api
    # ports:
    #   - 8089:80
    # depends_on:
    #   - mongodb
    # networks:
    #   - voltride

  mongodb:
    image: mongo
    container_name: mongodb
    env_file: .env
    ports:
      - 27017:27017
    volumes:
      - ./mongo/initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongo_db:/data/db
    networks:
      - voltride

  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: mongo-express
    restart: always
    env_file: .env
    ports:
      - 8181:8081
    networks:
      - voltride
    depends_on:
      - mongodb

  # pgsql:
    # image: postgres:13.4
    # container_name: pgsql
    # env_file: ./pgsql/.env
    # ports:
    #   - 5432:5432
    # volumes:
    #   - pgsql:/var/lib/postgresql/data
    # networks:
    #   - voltride

  # pgadmin:
    # image: dpage/pgadmin4
    # container_name: pgadmin
    # env_file: ./pgsql/.env
    # ports:
    #   - 8083:81
    # networks:
    #   - voltride
    # depends_on:
    #   - pgsql

networks:
  voltride:

volumes:
  mongo_db:
